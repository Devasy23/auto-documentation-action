name: 'Auto Documentation & Docstrings'
description: 'Automatically generate documentation and docstrings for multi-language codebases using AI (Anthropic Claude or Google Gemini)'
author: 'Devasy23'

branding:
  icon: 'book-open'
  color: 'blue'

inputs:
  model_provider:
    description: 'AI model provider to use (anthropic or gemini)'
    required: false
    default: 'anthropic'
  anthropic_api_key:
    description: 'Anthropic API key for Claude AI'
    required: false
  gemini_api_key:
    description: 'Google Gemini API key'
    required: false
  target_branches:
    description: 'Comma-separated list of branches to run on'
    required: false
    default: 'main,master,develop'
  commit_message:
    description: 'Custom commit message for documentation updates'
    required: false
    default: 'docs: Auto-generated multi-language documentation'

outputs:
  files_processed:
    description: 'Number of files that were processed'
  context_md_generated:
    description: 'Whether AI_CONTEXT.md was generated (true/false)'
  branch_created:
    description: 'Name of the branch created with changes'

runs:
  using: 'composite'
  steps:
    - name: Validate Inputs
      shell: bash
      run: |
        # Input validation for security
        if [[ "${{ inputs.model_provider }}" =~ ^[a-zA-Z0-9_-]+$ ]]; then
          echo "✅ Model provider validation passed"
        else
          echo "❌ Invalid model provider format"
          exit 1
        fi
        
        # Validate branch names
        if [[ "${{ inputs.target_branches }}" =~ ^[a-zA-Z0-9_,-/]+$ ]]; then
          echo "✅ Target branches validation passed"
        else
          echo "❌ Invalid target branches format"
          exit 1
        fi

    - name: Setup Environment
      shell: bash
      env:
        ANTHROPIC_API_KEY: ${{ inputs.anthropic_api_key }}
        GEMINI_API_KEY: ${{ inputs.gemini_api_key }}
        MODEL_PROVIDER: ${{ inputs.model_provider }}
      run: |
        scripts/setup_env.sh

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        pip install -r requirements.txt

    - name: Debug API Configuration
      shell: bash
      run: |
        scripts/debug_api.sh

    - name: Check/Generate AI_CONTEXT.md
      id: context-md
      shell: bash
      run: |
        scripts/generate_context.sh

    - name: Find Files Needing Documentation
      id: find-files
      shell: bash
      run: |
        scripts/find_files.sh

    - name: Generate Documentation
      if: steps.find-files.outputs.total_files > 0
      shell: bash
      env:
        go_files: ${{ steps.find-files.outputs.go_files }}
        typescript_files: ${{ steps.find-files.outputs.typescript_files }}
        python_files: ${{ steps.find-files.outputs.python_files }}
      run: |
        scripts/generate_docstrings.sh

    - name: Check for Changes
      id: check-changes
      shell: bash
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "✅ Multi-language changes detected!"
          git status
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No changes detected"
        fi

    - name: Commit Changes to Review Branch
      if: steps.check-changes.outputs.changes_detected == 'true'
      shell: bash
      env:
        COMMIT_MESSAGE: ${{ inputs.commit_message }}
      run: |
        scripts/commit_changes.sh

    - name: Set Outputs
      shell: bash
      run: |
        echo "files_processed=${{ steps.find-files.outputs.total_files }}" >> $GITHUB_OUTPUT
        echo "context_md_generated=${{ steps.context-md.outputs.generating_context_md }}" >> $GITHUB_OUTPUT

    - name: Summary
      shell: bash
      run: |
        echo "## 📊 Multi-Language Workflow Results" >> $GITHUB_STEP_SUMMARY
        echo "- **AI_CONTEXT.md**: ${{ steps.context-md.outputs.generating_context_md == 'true' && '✅ Generated' || '✅ Exists' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Go Files**: $(find . -name "*.go" | wc -l) scanned" >> $GITHUB_STEP_SUMMARY
        echo "- **TypeScript Files**: $(find . -name "*.ts" -o -name "*.tsx" | wc -l) scanned" >> $GITHUB_STEP_SUMMARY
        echo "- **Python Files**: $(find . -name "*.py" | wc -l) scanned" >> $GITHUB_STEP_SUMMARY
        echo "- **Files Needing Documentation**: ${{ steps.find-files.outputs.total_files }}" >> $GITHUB_STEP_SUMMARY
        echo "- **AI Provider**: ✅ $MODEL_PROVIDER" >> $GITHUB_STEP_SUMMARY
        echo "- **Changes**: ${{ steps.check-changes.outputs.changes_detected == 'true' && '✅ Review branch created' || 'ℹ️ No changes needed' }}" >> $GITHUB_STEP_SUMMARY
